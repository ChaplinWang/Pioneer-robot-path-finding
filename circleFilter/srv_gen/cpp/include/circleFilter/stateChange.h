/* Auto-generated by genmsg_cpp for file /home/rcle271/ros_workspace/circleFilter/srv/stateChange.srv */
#ifndef CIRCLEFILTER_SERVICE_STATECHANGE_H
#define CIRCLEFILTER_SERVICE_STATECHANGE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace circleFilter
{
template <class ContainerAllocator>
struct stateChangeRequest_ : public ros::Message
{
  typedef stateChangeRequest_<ContainerAllocator> Type;

  stateChangeRequest_()
  : state(0)
  {
  }

  stateChangeRequest_(const ContainerAllocator& _alloc)
  : state(0)
  {
  }

  typedef int8_t _state_type;
  int8_t state;


private:
  static const char* __s_getDataType_() { return "circleFilter/stateChangeRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "a33bed68685ae53bd39b0a9242210752"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a9cd65d8935b4ee9054d79a1f68a4f05"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 state\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, state);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, state);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(state);
    return size;
  }

  typedef boost::shared_ptr< ::circleFilter::stateChangeRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::circleFilter::stateChangeRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct stateChangeRequest
typedef  ::circleFilter::stateChangeRequest_<std::allocator<void> > stateChangeRequest;

typedef boost::shared_ptr< ::circleFilter::stateChangeRequest> stateChangeRequestPtr;
typedef boost::shared_ptr< ::circleFilter::stateChangeRequest const> stateChangeRequestConstPtr;


template <class ContainerAllocator>
struct stateChangeResponse_ : public ros::Message
{
  typedef stateChangeResponse_<ContainerAllocator> Type;

  stateChangeResponse_()
  : ok(false)
  {
  }

  stateChangeResponse_(const ContainerAllocator& _alloc)
  : ok(false)
  {
  }

  typedef uint8_t _ok_type;
  uint8_t ok;


private:
  static const char* __s_getDataType_() { return "circleFilter/stateChangeResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "6f6da3883749771fac40d6deb24a8c02"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a9cd65d8935b4ee9054d79a1f68a4f05"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool ok\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, ok);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, ok);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(ok);
    return size;
  }

  typedef boost::shared_ptr< ::circleFilter::stateChangeResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::circleFilter::stateChangeResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct stateChangeResponse
typedef  ::circleFilter::stateChangeResponse_<std::allocator<void> > stateChangeResponse;

typedef boost::shared_ptr< ::circleFilter::stateChangeResponse> stateChangeResponsePtr;
typedef boost::shared_ptr< ::circleFilter::stateChangeResponse const> stateChangeResponseConstPtr;

struct stateChange
{

typedef stateChangeRequest Request;
typedef stateChangeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct stateChange
} // namespace circleFilter

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::circleFilter::stateChangeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a33bed68685ae53bd39b0a9242210752";
  }

  static const char* value(const  ::circleFilter::stateChangeRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xa33bed68685ae53bULL;
  static const uint64_t static_value2 = 0xd39b0a9242210752ULL;
};

template<class ContainerAllocator>
struct DataType< ::circleFilter::stateChangeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "circleFilter/stateChangeRequest";
  }

  static const char* value(const  ::circleFilter::stateChangeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::circleFilter::stateChangeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 state\n\
\n\
";
  }

  static const char* value(const  ::circleFilter::stateChangeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::circleFilter::stateChangeRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::circleFilter::stateChangeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6f6da3883749771fac40d6deb24a8c02";
  }

  static const char* value(const  ::circleFilter::stateChangeResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6f6da3883749771fULL;
  static const uint64_t static_value2 = 0xac40d6deb24a8c02ULL;
};

template<class ContainerAllocator>
struct DataType< ::circleFilter::stateChangeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "circleFilter/stateChangeResponse";
  }

  static const char* value(const  ::circleFilter::stateChangeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::circleFilter::stateChangeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool ok\n\
\n\
\n\
";
  }

  static const char* value(const  ::circleFilter::stateChangeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::circleFilter::stateChangeResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::circleFilter::stateChangeRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.state);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct stateChangeRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::circleFilter::stateChangeResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ok);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct stateChangeResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<circleFilter::stateChange> {
  static const char* value() 
  {
    return "a9cd65d8935b4ee9054d79a1f68a4f05";
  }

  static const char* value(const circleFilter::stateChange&) { return value(); } 
};

template<>
struct DataType<circleFilter::stateChange> {
  static const char* value() 
  {
    return "circleFilter/stateChange";
  }

  static const char* value(const circleFilter::stateChange&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<circleFilter::stateChangeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a9cd65d8935b4ee9054d79a1f68a4f05";
  }

  static const char* value(const circleFilter::stateChangeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<circleFilter::stateChangeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "circleFilter/stateChange";
  }

  static const char* value(const circleFilter::stateChangeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<circleFilter::stateChangeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a9cd65d8935b4ee9054d79a1f68a4f05";
  }

  static const char* value(const circleFilter::stateChangeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<circleFilter::stateChangeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "circleFilter/stateChange";
  }

  static const char* value(const circleFilter::stateChangeResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // CIRCLEFILTER_SERVICE_STATECHANGE_H

